name: Scheduled Pull Request
on:
  workflow_dispatch:
  schedule:
    - cron: "*/60 * * * *"
    
jobs:
  scheduled-pull-request:
    runs-on: common-8gb
    steps:
    - name: 🐙 Checkout code
      uses: actions/checkout@v3
    - name: Create Pull Request
      uses: actions/github-script@v6
      with:
        script: |
          const { repo, owner } = context.repo;

          const commits = await github.rest.repos.listCommits({
            owner: owner,
            repo: repo,
            sha: 'stage'
          });
        
          const commitMessages = commits.data.map(commit => commit.commit.message).join(" ");

          const extractedMessages = commitMessages.match(/DS-[0-9]+/g);
          const delimitedMessages = extractedMessages ? extractedMessages.join(" ") : "";
          const currentDate = new Date().toISOString().split('T')[0];

          const pullRequestTitle = `DS-1234 DS-5678 : Stage to Master : CHG12345689 RC Release ${currentDate}`

          const pulls = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              head: context.ref,
              base: 'main',
              state: 'open',
          });

          if (pulls.data.length < 1) {
            await github.rest.pulls.create({
              title: pullRequestTitle,
              owner: owner,
              repo: repo,
              head: 'stage',
              base: 'main',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script)',
              ].join('\n'),
            });
          } else {
            const existingPR = pulls.data[0];
            await github.rest.pulls.update({
              title: pullRequestTitle,
              owner: owner,
              repo: repo,
              pull_number: existingPR.number,
              body: [
                existingPR.body,
                `Updated by Job ${context.job}`,
              ].join('\n'),
            });
          }


  name: Get Commits with Regex

on: [push]

jobs:
  get-commits:
    runs-on: ubuntu-latest

    steps:
    - name: Get Commits
      uses: actions/github-script@v6
      id: get-commits
      with:
        script: |
          // Fetch all commits from the repository
          const commits = await github.rest.repos.listCommits({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });

          // Extract commit messages and join them into a space-delimited string
          const commitMessages = commits.data.map(commit => commit.commit.message).join(" ");

          // Extract patterns like "DS-1234" using a regular expression
          const extractedMessages = commitMessages.match(/DS-[0-9]+/g);

          // Join extracted messages into a space-delimited string
          const delimitedMessages = extractedMessages ? extractedMessages.join(" ") : "";

          // Set the output variable for later use
          setOutput("commit_messages", delimitedMessages);

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Print Commit Messages
      run: |
        # Access the output variable from the previous step
        echo "Commit Messages: ${{ steps.get-commits.outputs.commit_messages }}"