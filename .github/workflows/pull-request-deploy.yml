name: Prepare Pull Request for Release Deployment
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Choose a branch:'
        required: true
        default: stage
        type: choice
        options:
          - stage
          - sre-stage
  push:
    branches:
      - stage
      - sre-stage
    
jobs:
  pull-request-deploy:
    runs-on: common-8gb
    strategy:
      matrix:
        branch: [stage, sre-stage]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set Branch Variable
      id: set_branch_variable
      run: echo "BRANCH=${{ matrix.branch }}" >> $GITHUB_OUTPUT

    - name: Set Custom Variables
      id: set_custom_variables
      run: |
        if [ "${{ steps.set_branch_variable.outputs.BRANCH }}" == "stage" ]; then
          echo "DISPLAY_BRANCH=Stage" >> $GITHUB_OUTPUT
          echo "RELEASE_TYPE=RC" >> $GITHUB_OUTPUT
        elif [ "${{ steps.set_branch_variable.outputs.BRANCH }}" == "sre-stage" ]; then
          echo "DISPLAY_BRANCH=SRE-Stage" >> $GITHUB_OUTPUT
          echo "RELEASE_TYPE=CI/CD" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request
      uses: actions/github-script@v6
      with:
        script: |
          const { repo, owner } = context.repo;

          const comparison = await github.rest.repos.compareCommits({
            owner: owner,
            repo: repo,
            base: 'main',
            head: "${{ steps.set_branch_variable.outputs.BRANCH }}"
          });

          const commitMessages = comparison.data.commits.map(commit => commit.commit.message).join(" ");
          const extractedTicketCommits = [...new Set(commitMessages.match(/DS-[0-9]+/g))];
          const ticketSummary  = extractedTicketCommits.length == 0 ? '[No commits with ticket numbers yet]' : extractedTicketCommits.join(" ");

          console.log('Commit Messages: ', commitMessages);
          console.log('Ticket Summary: ', ticketSummary);

          const currentDate = new Date().toISOString().split('T')[0];

          const pullRequestTitle = `${ticketSummary} : "${{ steps.set_custom_variables.outputs.DISPLAY_BRANCH }}" to Master : [insert RFC ticket] "${{ steps.set_custom_variables.outputs.RELEASE_TYPE }}" Release ${currentDate}`

          const pulls = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              base: 'main',
              head: "${{ steps.set_branch_variable.outputs.BRANCH }}",
              state: 'open',
          });

          const findPull = pulls.data.find(pr => pr.head.ref === "${{ steps.set_branch_variable.outputs.BRANCH }}");

          if (findPull === null || findPull === undefined) {
            await github.rest.pulls.create({
              title: pullRequestTitle,
              owner: owner,
              repo: repo,
              base: 'main',
              head: "${{ steps.set_branch_variable.outputs.BRANCH }}"
            });
          } 
          
          else {
            await github.rest.pulls.update({
              title: pullRequestTitle,
              owner: owner,
              repo: repo,
              pull_number: findPull.number
            });
          }